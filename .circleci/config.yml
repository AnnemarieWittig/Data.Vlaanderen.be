version: 2
jobs:
  checkout:
    docker: 
      - image: circleci/python
    steps:
      - checkout
      - run: mkdir -p workspace
      - run: ls -al workspace
      - run: $PWD/scripts/checkout.sh /tmp/workspace $PWD/scripts/publication.config
      - run: cat /tmp/workspace/checkouts.txt
      - run:
          name: List the files which have been created
          command: ls -al /tmp/workspace/*
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - checkouts.txt
            - links.txt
            - src/
  extract-jsonld-details:
    docker:
      - image: informatievlaanderen/oslo-ea-to-rdf:json-ld-format-circleci
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Extract json details required (part1)
          command: $PWD/scripts/extract-what.sh jsonld
      - run:
          name: Show the report (for debugging purposes)
          command: cat /tmp/workspace/report/*.report
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - checkouts.txt
            - links.txt
            - report/
            - json/
            - src/
  normalise-jsonld:
    docker:
      - image: informatievlaanderen/oslo-ea-to-rdf:json-ld-format-circleci
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Make sure pretty print is runnable
          command: cd /app/pretty-print ; npm install
      - run:
          name: Normalise the recovered JSON-LD files (in the src directory)
          command: $PWD/scripts/pretty-print-jsonfiles.sh /tmp/workspace
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - src/
  render-html-details:
    docker:
      - image: informatievlaanderen/oslo-specification-generator:javascript-circleci
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Render HTML version of merged json file
          command: $PWD/scripts/render-details.sh /tmp/workspace html
      - run:
          name: List the html files found
          command: find /tmp/workspace/target -name \*.html -type f
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - target/
  render-context-details:
    docker:
      - image: informatievlaanderen/oslo-specification-generator:javascript-circleci
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Render Context Details
          command: $PWD/scripts/render-details.sh /tmp/workspace context
      - run:
          name: List the context files found
          command: find /tmp/workspace/target -name \*.ttl -type f
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - target/
  render-shacl-details:
    docker:
      - image: informatievlaanderen/oslo-specification-generator:javascript-circleci
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Render Shacl details
          command: $PWD/scripts/render-details.sh /tmp/workspace shacl
      - run:
          name: List the shacl files found
          command: find /tmp/workspace/target -name \*.shacl.json -type f
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - target/
  expand-links:
    docker: 
      - image: circleci/node:4.8.2
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run: $PWD/scripts/expand-links.sh /tmp/workspace
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - target/
  render-voc-rdf-orig:
    docker:
      - image: circleci/ruby
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Install dependencies
          command: |
            gem install linkeddata && mkdir -p /tmp/workspace/voc
            jq -r '.[] | select(has("prefix")) | @sh "mkdir -p /tmp/workspace/voc/\(.prefix)"' config/eap-mapping.json | bash -e
      - run:
          name: Generate turtle
          command: |
            for model in $(jq -r '.[] | select(.type | contains("voc")) | "\(if .prefix then .prefix + "/" else "" end)\(.name)"' config/eap-mapping.json); do
              rdf serialize --input-format jsonld --processingMode json-ld-1.1 /tmp/workspace/.json --output-format turtle -o /tmp/workspace/voc/.ttl
              
            done
      - run:
          name: Generate ntriples
          command: |
            for model in $(jq -r '.[] | select(.type | contains("voc")) | "\(if .prefix then .prefix + "/" else "" end)\(.name)"' config/eap-mapping.json); do
              rdf serialize --input-format jsonld --processingMode json-ld-1.1 /tmp/workspace/.json --output-format ntriples -o /tmp/workspace/voc/.nt
            done
      - run:
          name: Generate rdfxml
          command: |
            for model in $(jq -r '.[] | select(.type | contains("voc")) | "\(if .prefix then .prefix + "/" else "" end)\(.name)"' config/eap-mapping.json); do
              rdf serialize --input-format jsonld --processingMode json-ld-1.1 /tmp/workspace/.json --output-format rdfxml -o /tmp/workspace/voc/.rdf
            done
  render-voc-rdf:
    docker:
      - image: circleci/ruby
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Install dependencies
          command: |
            gem install linkeddata && mkdir -p /tmp/workspace/voc
      - run:
          name: Generate turtle
          command: |
            $PWD/scripts/generate-voc.sh /tmp/workspace json
      - run:
          name: list results 
          command: |
            ls /tmp/workspace/voc
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - target/
  create-artifact:
    docker:
      - image: circleci/node
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - add_ssh_keys:
          fingerprints:
            - "84:ef:18:e6:4c:b3:fa:38:4e:d2:47:09:e9:be:0f:e6"
      - run:
          name: Checkout target repo
          workdir: /tmp
          command: |
            rm -rf OSLO-Generated
            git clone git@github.com:Informatievlaanderen/OSLO-Generated.git
      - run:
          name: clean the generated directory
          workdir: /tmp/OSLO-Generated
          command: |
            git fetch origin
            git branch "${CIRCLE_BRANCH}"
            git checkout "${CIRCLE_BRANCH}"
            rm -rf *
      - run:
          name: Copy static assets
          command: |
            cp -R site-skeleton/* /tmp/OSLO-Generated/
      - run:
          name: Copy generated assets
          workdir: /tmp/workspace
          command: |
            cp -R target/* /tmp/OSLO-Generated
            cp -R report /tmp/OSLO-Generated/report
            cp -R json   /tmp/OSLO-Generated/report
      - run:
          name: Push results to github
          workdir: /tmp/OSLO-Generated
          command: |
            git config user.email "oslo@kb.vlaanderen.be"
            git config user.name "Circle CI Builder"
            git add .
            git commit -m "Applying changes from commit ${CIRCLE_SHA1}" --allow-empty
            git push --force origin "${CIRCLE_BRANCH}"
workflows:
  version: 2
  generate_documentation:
    jobs:
      - checkout
      - extract-jsonld-details:
          requires:
            - checkout
      - normalise-jsonld:
          requires:
            - extract-jsonld-details          
      - render-html-details:
          requires:
            - normalise-jsonld
      - render-voc-rdf:
          requires:
            - normalise-jsonld
      - render-shacl-details:
          requires:
            - normalise-jsonld
      - render-context-details:
          requires:
            - normalise-jsonld
      - expand-links:
          requires:
            - render-shacl-details
            - render-context-details
            - render-voc-rdf
            - render-html-details
      - create-artifact:
          requires:
            - expand-links
